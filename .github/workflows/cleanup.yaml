name: Cleanup Old Deployments

on:
  schedule:
    - cron: '0 0 * * 0' # Runs every Sunday at midnight UTC
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Clean up old deployments
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: |
          echo "[DEBUG] Starting cleanup job"

          # Define the age limit (in days)
          AGE_LIMIT_DAYS=7
          echo "[DEBUG] Age limit set to $AGE_LIMIT_DAYS days"

          # Get the current date in seconds since epoch
          current_date=$(date +%s)
          echo "[DEBUG] Current date (epoch): $current_date"

          # List all deployments
          deployments=$(vercel ls --token $VERCEL_TOKEN --yes)
          echo "[DEBUG] Deployments retrieved: $deployments"

          # Initialize the current production deployment
          current_prod_deployment=""

          # Process each deployment
          echo "$deployments" | tail -n +5 | head -n -2 | while read -r line; do
            echo "[DEBUG] Processing line: $line"

            # Extract fields
            age=$(echo "$line" | awk '{print $1}')
            uid=$(echo "$line" | awk '{print $2}')
            target=$(echo "$line" | awk '{print $4}')

            echo "[DEBUG] Extracted Age: $age"
            echo "[DEBUG] Extracted UID: $uid"
            echo "[DEBUG] Extracted Target: $target"

            # Determine the age in days
            unit=$(echo "$age" | grep -o '[a-zA-Z]')
            value=$(echo "$age" | grep -o '[0-9]*')

            if [ "$unit" == "d" ]; then
              deployment_age_days=$value
            elif [ "$unit" == "h" ]; then
              deployment_age_days=$((value / 24))
            else
              deployment_age_days=0
            fi

            echo "[DEBUG] Deployment age (days): $deployment_age_days"

            # Check if the deployment is the current production deployment
            if [ "$target" == "Production" ] && [ -z "$current_prod_deployment" ]; then
              current_prod_deployment=$uid
              echo "[DEBUG] Current production deployment UID: $current_prod_deployment"
            fi

            # Delete the deployment if it is older than the age limit and not the current production deployment
            if [ $deployment_age_days -gt $AGE_LIMIT_DAYS ] && [ "$uid" != "$current_prod_deployment" ]; then
              echo "[DEBUG] Deleting deployment: $uid (Age: $deployment_age_days days, Target: $target)"
              vercel rm $uid --yes --token $VERCEL_TOKEN
            else
              echo "[DEBUG] Not deleting deployment: $uid (Age: $deployment_age_days days, Target: $target)"
            fi
          done

          echo "[DEBUG] Cleanup job finished"
