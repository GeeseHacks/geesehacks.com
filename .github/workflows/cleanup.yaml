name: Cleanup Old Deployments

on:
  schedule:
    - cron: '0 0 * * 0' # Runs every Sunday at midnight UTC
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3 # Updated to v3 for Node.js 20 support

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Clean up old deployments
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_NAME: ${{ secrets.VERCEL_PROJECT_NAME }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: |
          # Define the age limit (in days)
          AGE_LIMIT_DAYS=7

          # Get the current date in seconds since epoch
          current_date=$(date +%s)

          # List all deployments
          deployments=$(VERCEL_ORG_ID=$VERCEL_ORG_ID VERCEL_PROJECT_NAME=$VERCEL_PROJECT_NAME VERCEL_TOKEN=$VERCEL_TOKEN vercel ls --confirm --scope $VERCEL_ORG_ID --token $VERCEL_TOKEN)

          # Extract deployment UIDs, creation times, and targets from the output
          while IFS= read -r line; do
            uid=$(echo "$line" | awk '{print $1}')
            created_at=$(echo "$line" | awk '{print $2}')
            target=$(echo "$line" | awk '{print $3}')
            
            # Convert the creation time to seconds since epoch
            created_at_epoch=$(date -d "$created_at" +%s)
            
            # Calculate the deployment age in days
            deployment_age_days=$(( (current_date - created_at_epoch) / 86400 ))

            # Check if the deployment is the current production deployment
            is_prod_deployment=$(vercel inspect $uid --token $VERCEL_TOKEN | grep '"target": "production"' | wc -l)
            if [ $is_prod_deployment -eq 1 ]; then
              current_prod_deployment=$uid
            fi

            # Delete the deployment if it is older than the age limit and not the current production deployment
            if [ $deployment_age_days -gt $AGE_LIMIT_DAYS ] && [ "$uid" != "$current_prod_deployment" ]; then
              echo "Deleting deployment: $uid (Age: $deployment_age_days days, Target: $target)"
              VERCEL_ORG_ID=$VERCEL_ORG_ID VERCEL_PROJECT_NAME=$VERCEL_PROJECT_NAME VERCEL_TOKEN=$VERCEL_TOKEN vercel rm $uid --yes --token $VERCEL_TOKEN
            fi
          done <<< "$deployments"
